// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int base;

    /** Initializes the keyboard. */
    function void init() {
        let base = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        if (Memory.peek(base)) {
            return Memory.peek(base);
        }
        return 0;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c;
        do Output.printChar(0);
        while (Keyboard.keyPressed() = 0) {}
        let c = Keyboard.keyPressed();
        while (~(Keyboard.keyPressed() = 0)) {}
        do Output.deleteChar();
        // if c is backspace
        if (~(c = 129)) {
            do Output.printChar(c);
        }
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str;
        var char c;
        var int curr_len;
        let curr_len = 0;
        let str = String.new(64);
        do Output.printString(message);
        while (true) {
            let c = Keyboard.readChar();
            // in case of newlinw
            if (c = 128) {
                return str;
            }
            else {
                // in case of backspace
                if (c = 129) {
                    // in case the user tries to erase from an empty string
                    if (~(curr_len = 0)) {
                        do str.eraseLastChar();
                        do Output.backSpace();
                        let curr_len = curr_len - 1;
                    }
                }
                else {
                    let str = str.appendChar(c);
                    let curr_len = curr_len + 1;
                }
            }
        }
        return str;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var int i, sum, len, begin;
        var String str;
        let str = Keyboard.readLine(message);
        let i = 1;
        let sum = 0;
        let len = str.length() - 1;
        let begin = -1;
        // in case of a negative number
        if (~(len = -1) & (str.charAt(0) = 45)) {
            let begin = 0;
        }
        while (len > begin) {
            let sum = sum + (i * (str.charAt(len) - 48));
            let len = len - 1;
            let i = i * 10;
        }
        if (begin = 0) {
            return (sum * (-1));
        }
        return sum;
    }
}
