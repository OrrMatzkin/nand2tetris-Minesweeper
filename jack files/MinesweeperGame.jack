/** A Minsweeper game class   */
class MinesweeperGame {

    field Controller controller; // controls the game board
    field boolean exit; // true when the game is over (pressed esc or lost)
    field boolean endGame; // true the game ends
    
    /** Constructs a MinesweeperGame */
    constructor MinesweeperGame new() {
        do Display.drawStartGame();
        let controller = Controller.new();
        do controller.drawLevelNumber();
        return this;
    }

    /** Runs the game, main loop */
    method void run() {
        var char key;

        while ((~exit) & (~endGame)) {

            // checks it the player won
            if (controller.hasWon()) {
                let endGame = true;
            }    

            // waits for the key to be pressed
            while ((key = 0) & ((~exit) & (~endGame))) {
                let key = Keyboard.keyPressed();
                do Sys.wait(50);
            }

            // all possible key pressing
            if (key = 130) { do controller.moveLeft(); } // left arrow
            if (key = 131) { do controller.moveUp(); } // up arrow
            if (key = 132) { do controller.moveRight(); } // right arrow
            if (key = 133) { do controller.moveDown(); } // down arrow
            if (key = 79) { do controller.open(); } // 'O' button
            if (key = 70) { do controller.flagUnflag(); } // 'F' button
            if (key = 73) { do showInstructions(); } // 'I' button
            if (key = 49) { do controller.loadLevel(1); } // 1
            if (key = 50) { do controller.loadLevel(2); } // 2
            if (key = 51) { do controller.loadLevel(3); } // 3
            if (key = 52) { do controller.loadLevel(4); } // 4
            if (key = 53) { do controller.loadLevel(5); } // 5
            else { if (key = 140) { let exit = true; } } // 'esc' button
            
            // Waits for the key to be released.
            while ((~(key = 0)) & ((~exit) & (~endGame))) {
                let key = Keyboard.keyPressed();
                do Sys.wait(50);
            }

            // checks if the player lost
            if (controller.hasDied()){
                let exit = true;
            }
        }

        // if the player lost
        if (exit) {
            let endGame = true;
            do Display.drawDeadSmiley();
            do Screen.setColor(false);
            do Screen.drawRectangle(180,80,320,155);
            do Screen.setColor(true);
            do Display.drawEmptyBox(180,80,320,155);
            do Output.moveCursor(10, 27);
            do Output.printString("Game Over");
        }

        // if the player won
        if (endGame & (~exit)) {
            do Screen.setColor(false);
            do Screen.drawRectangle(166,80,320,160);
            do Screen.setColor(true);
            do Display.drawEmptyBox(166,80,320,160);
            do Output.moveCursor(10, 22);
            do Output.printString("congratulations !");
        }
        return;
    }

    /** Present the full instructions */
    method void showInstructions() {
        var char key;
        let key  = 0;

        // displayes the instructions
        do Screen.clearScreen();
        do Display.drawFullInstructions();

        // if no key is pressed does nothing (keeping showing the instructions)
        while (key = 0) {
            let key = Keyboard.keyPressed();
            do Sys.wait(50);
        }

        // displayes the main game screen
        do Screen.clearScreen();
        do Display.drawStartGame();
        do controller.drawBoard();
        do controller.drawLevelNumber();
        
        // shows back the number of flags left
        do controller.flagUnflag();
        do controller.flagUnflag();
        return;
    }

   /** Disposes the game */
    method void dispose() {
        do controller.dispose();
        do Memory.deAlloc(this);
        return;
    }

}