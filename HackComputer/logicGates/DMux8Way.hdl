// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // the most left bit of sel determines if we output a/b/c/d or e/f/g/h.
    DMux(in=in, sel=sel[2], a=a0,b=b0);

    // the middle left bit of sel determines if we output a/b or c/d or e/f or g/h.
    DMux(in=a0, sel=sel[1], a=a00, b=b00);
    DMux(in=b0, sel=sel[1], a=c00, b=d00);

    // the last bit of determines the exact input (a/b/c/d/e/f/g/h) to output.
    DMux(in=a00, sel=sel[0], a=a, b=b);
    DMux(in=b00, sel=sel[0], a=c, b=d);
    DMux(in=c00, sel=sel[0], a=e, b=f);
    DMux(in=d00, sel=sel[0], a=g, b=h);
}