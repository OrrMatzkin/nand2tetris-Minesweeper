// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // we DMux the load to the desired RAM64.
    DMux8Way(in=load, sel=address[0..2], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);   
    RAM64(in=in, load=load1, address=address[3..8], out=ramout1);
    RAM64(in=in, load=load2, address=address[3..8], out=ramout2);
    RAM64(in=in, load=load3, address=address[3..8], out=ramout3);
    RAM64(in=in, load=load4, address=address[3..8], out=ramout4);
    RAM64(in=in, load=load5, address=address[3..8], out=ramout5);
    RAM64(in=in, load=load6, address=address[3..8], out=ramout6);
    RAM64(in=in, load=load7, address=address[3..8], out=ramout7);
    RAM64(in=in, load=load8, address=address[3..8], out=ramout8);

    // we Mux the result back from all the RAMS.
    Mux8Way16(a=ramout1, b=ramout2, c=ramout3, d=ramout4, e=ramout5, f=ramout6, g=ramout7, h=ramout8, sel=address[0..2], out=out);
}